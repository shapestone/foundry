name: "microservice"
version: "1.0.0"
author: "Foundry Team"
description: "Microservice architecture layout with gRPC, message queues, Kubernetes deployment, and service mesh integration"
min_foundry_version: "0.5.0"

structure:
  directories:
    - path: "services/{{.ServiceName}}"
      description: "Main service implementation"
    - path: "services/{{.ServiceName}}/internal/handlers"
      description: "gRPC and HTTP handlers"
    - path: "services/{{.ServiceName}}/internal/models"
      description: "Service-specific data models"
    - path: "services/{{.ServiceName}}/internal/repository"
      description: "Data access layer"
    - path: "services/{{.ServiceName}}/internal/services"
      description: "Business logic layer"
    - path: "shared/proto"
      description: "Protocol buffer definitions"
    - path: "shared/events"
      description: "Event definitions and handlers"
    - path: "shared/middleware"
      description: "Common middleware components"
    - path: "shared/config"
      description: "Shared configuration"
    - path: "shared/errors"
      description: "Common error definitions"
    - path: "shared/observability"
      description: "Logging, metrics, and tracing"
    - path: "deployments/kubernetes"
      description: "Kubernetes manifests"
    - path: "deployments/helm"
      description: "Helm charts"
    - path: "deployments/docker"
      description: "Docker configurations"
    - path: "api/proto"
      description: "API contract definitions"
    - path: "tools/migrations"
      description: "Database migration tools"
    - path: "tools/scripts"
      description: "Operational scripts"
    - path: "docs/api"
      description: "API documentation"
    - path: "docs/architecture"
      description: "System architecture documentation"

  files:
    - template: "project/go.mod.tmpl"
      target: "go.mod"
    - template: "project/README.md.tmpl"
      target: "README.md"
    - template: "project/Makefile.tmpl"
      target: "Makefile"
    - template: "project/docker-compose.yml.tmpl"
      target: "docker-compose.yml"
    - template: "project/gitignore.tmpl"
      target: ".gitignore"
    - template: "project/.env.example.tmpl"
      target: ".env.example"
    - template: "project/foundry.yaml.tmpl"
      target: "foundry.yaml"
    - template: "project/buf.yaml.tmpl"
      target: "buf.yaml"
    - template: "project/buf.gen.yaml.tmpl"
      target: "buf.gen.yaml"
    - template: "services/main.go.tmpl"
      target: "services/{{.ServiceName}}/main.go"
    - template: "services/service.yaml.tmpl"
      target: "services/{{.ServiceName}}/service.yaml"
    - template: "services/Dockerfile.tmpl"
      target: "services/{{.ServiceName}}/Dockerfile"
    - template: "shared/proto/common.proto.tmpl"
      target: "shared/proto/common.proto"
    - template: "shared/events/events.go.tmpl"
      target: "shared/events/events.go"
    - template: "shared/config/config.go.tmpl"
      target: "shared/config/config.go"
    - template: "shared/observability/logger.go.tmpl"
      target: "shared/observability/logger.go"
    - template: "shared/observability/metrics.go.tmpl"
      target: "shared/observability/metrics.go"
    - template: "shared/observability/tracing.go.tmpl"
      target: "shared/observability/tracing.go"
    - template: "deployments/kubernetes/namespace.yaml.tmpl"
      target: "deployments/kubernetes/namespace.yaml"
    - template: "deployments/kubernetes/configmap.yaml.tmpl"
      target: "deployments/kubernetes/configmap.yaml"
    - template: "deployments/kubernetes/secret.yaml.tmpl"
      target: "deployments/kubernetes/secret.yaml"
    - template: "deployments/kubernetes/service.yaml.tmpl"
      target: "deployments/kubernetes/{{.ServiceName}}-service.yaml"
    - template: "deployments/kubernetes/deployment.yaml.tmpl"
      target: "deployments/kubernetes/{{.ServiceName}}-deployment.yaml"
    - template: "deployments/kubernetes/ingress.yaml.tmpl"
      target: "deployments/kubernetes/{{.ServiceName}}-ingress.yaml"
    - template: "deployments/helm/Chart.yaml.tmpl"
      target: "deployments/helm/Chart.yaml"
    - template: "deployments/helm/values.yaml.tmpl"
      target: "deployments/helm/values.yaml"
    - template: "api/proto/service.proto.tmpl"
      target: "api/proto/{{.ServiceName}}.proto"

dependencies:
  - "google.golang.org/grpc"
  - "google.golang.org/protobuf/types/known/timestamppb"
  - "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
  - "github.com/nats-io/nats.go"
  - "github.com/prometheus/client_golang/prometheus"
  - "go.opentelemetry.io/otel"
  - "go.opentelemetry.io/otel/trace"
  - "go.opentelemetry.io/otel/exporters/jaeger"
  - "github.com/sony/gobreaker"
  - "go.uber.org/zap"
  - "github.com/kelseyhightower/envconfig"
  - "github.com/golang-migrate/migrate/v4"

features:
  - "grpc-server"
  - "grpc-gateway"
  - "message-queues"
  - "event-driven-architecture"
  - "kubernetes-native"
  - "helm-charts"
  - "service-mesh-ready"
  - "distributed-tracing"
  - "prometheus-metrics"
  - "circuit-breaker"
  - "graceful-shutdown"
  - "health-checks"
  - "database-migrations"
  - "protocol-buffers"
  - "api-versioning"

variables:
  - name: "service_name"
    default: "user"
    description: "Name of the primary service"
    required: true
  - name: "grpc_port"
    default: "9090"
    description: "gRPC server port"
  - name: "http_port"
    default: "8080"
    description: "HTTP gateway port"
  - name: "metrics_port"
    default: "2112"
    description: "Prometheus metrics port"
  - name: "database_driver"
    default: "postgres"
    description: "Database driver (postgres, mysql, etc.)"
  - name: "message_broker"
    default: "nats"
    description: "Message broker (nats, kafka, rabbitmq)"
  - name: "service_mesh"
    default: "istio"
    description: "Service mesh (istio, linkerd, consul)"
  - name: "namespace"
    default: "default"
    description: "Kubernetes namespace"
  - name: "github_username"
    default: ""
    description: "GitHub username for module path"
    required: false

components:
  service:
    template: "components/service.go.tmpl"
    target_dir: "services/{{.ServiceName}}/internal/services"
  grpc_handler:
    template: "components/grpc_handler.go.tmpl"
    target_dir: "services/{{.ServiceName}}/internal/handlers"
  http_handler:
    template: "components/http_handler.go.tmpl"
    target_dir: "services/{{.ServiceName}}/internal/handlers"
  repository:
    template: "components/repository.go.tmpl"
    target_dir: "services/{{.ServiceName}}/internal/repository"
  model:
    template: "components/model.go.tmpl"
    target_dir: "services/{{.ServiceName}}/internal/models"
  event_handler:
    template: "components/event_handler.go.tmpl"
    target_dir: "shared/events"
  middleware:
    template: "components/middleware.go.tmpl"
    target_dir: "shared/middleware"
  circuit_breaker:
    template: "components/circuit_breaker.go.tmpl"
    target_dir: "shared/middleware"
  health_check:
    template: "components/health_check.go.tmpl"
    target_dir: "services/{{.ServiceName}}/internal/handlers"
  proto_service:
    template: "components/proto_service.proto.tmpl"
    target_dir: "api/proto"